<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 一只傻哈皮</title>
    <link>https://hapi666.com/post/</link>
    <description>Recent content in Posts on 一只傻哈皮</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hapi666@gmail.com (hapi666)</managingEditor>
    <webMaster>hapi666@gmail.com (hapi666)</webMaster>
    <lastBuildDate>Mon, 23 Sep 2019 16:27:02 +0800</lastBuildDate>
    
	<atom:link href="https://hapi666.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL-完整性约束</title>
      <link>https://hapi666.com/post/constraint/</link>
      <pubDate>Mon, 23 Sep 2019 16:27:02 +0800</pubDate>
      <author>hapi666@gmail.com (hapi666)</author>
      <guid>https://hapi666.com/post/constraint/</guid>
      <description>一、概念
​ 保证授权用户对数据库所做的修改不会破坏数据的一致性。
​ 因此，完整性约束 防止的是对数据的意外破坏。
二、完整性约束分为三类，包括：
​ \1. 域完整性 ：是指给定列的取值范围（即输入的有效性）
​ \2. 实体完整性 ：规定表中的每一行在表中是唯一的一个实体（实体就是一条记录）
​ \3. 参照完整性 ：保持主外键之间的参照规则。它保证的是表之前数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。
​ 4.用户定义完整性：不同的关系数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性是针对某个特定关系数据库的约束条件，它反映某一具体应用必须满足的语义要求。（就是根据特定的业务，用户自定义的规则）
三、完整性约束的类型
​ \1. 主键约束（PRIMARY KEY）：要求主键列 数据唯一，并且不允许为空，PRIMARY KEY = UNIQUE + NOT NULL。主键可以包含表的一列或多列。你定义的主键包含多列时，你只能在表级定义。
​ # 在表级定义主键约束
​ CREATE TABLE student (
​ sno NUMBER(3),
​ same VARCHAR2(15),
​ gender CHAR(3) DEFAULT ‘男’,
​ age NUMBER(2),
​ CONSTRAINTS pk_student PRIMARY KEY (sno,sname)
​ );
​ # 在列级定义主键约束
​ CREATE TABLE student (</description>
    </item>
    
  </channel>
</rss>